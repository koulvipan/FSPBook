@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<div class="sidebar">
    <div class="text-center">
        <h6 class="display-4">News Feed</h6>
    </div>
    @foreach (var news in Model.News.data)
    {
        <p><a href="@news.url">@Html.DisplayFor(modelItem => news.title)</a></p>
    }
</div>

<div class="body-text">
    <div class="text-center">
        <h3 class="display-4">All Posts</h3>
    </div>
    <table class="table table-sm table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Posts[0].Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts[0].Content)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Posts[0].DateTimePosted)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        <a asp-page="./Profile" asp-route-id="@item.AuthorId">@Model.GetAuthor(item.AuthorId)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Content)
                    </td>
                    <td>
                        @{
                            string DateString = item.DateTimePosted.ToString("MM/dd/yyyy HH:mm");
                        }
                        @Html.DisplayFor(modelItem => DateString)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*<div class="row">
    <div class="left">
        <div class="text-center">
            <h3 class="display-4">All Posts</h3>
        </div>
            <table class="table table-sm table-striped table-bordered">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Posts[0].Author)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Posts[0].Content)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Posts[0].DateTimePosted)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                <a asp-page="./Profile" asp-route-id="@item.AuthorId">@Model.GetAuthor(item.AuthorId)</a>                             
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Content)
                            </td>
                            <td>
                                @{
                                    string DateString = item.DateTimePosted.ToString("MM/dd/yyyy HH:mm");
                                }
                                @Html.DisplayFor(modelItem => DateString)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
    </div>
    <div class="middle"><table></table></div>
    <div class="right">
        <div class="text-center">
            <h3 class="display-4">News Feed</h3>
        </div>
        <table class="table table-sm table-striped table-bordered">
            <thead>
                <tr>
                    <th>
                        News
                    </th>
                    <th>
                        DateTimePosted
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var news in Model.News.data)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => news.title)
                        </td>
                        <td>
                            @{
                                DateTime date = DateTime.Parse(news.published_at);
                                string DateString = date.ToString("MM/dd/yyyy HH:mm");
                            }
                            @Html.DisplayFor(modelItem => DateString)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>*@
@if (Model.pager.Pages.Any())
{
    <nav class="table-responsive align-content-center">
        <ul class="pagination justify-content-center d-flex flex-wrap">
            @if (Model.pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="/">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="/?p=@(Model.pager.CurrentPage - 1)">Previous</a>
                </li>
            }

            @foreach (var p in Model.pager.Pages)
            {
                <li class="page-item @(p == Model.pager.CurrentPage ? "active" : "")">
                    <a class="page-link" href="/?p=@p">@p</a>
                </li>
            }

            @if (Model.pager.CurrentPage < Model.pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="/?p=@(Model.pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="/?p=@(Model.pager.TotalPages)">Last</a>
                </li>
            }
        </ul>
    </nav>
}

